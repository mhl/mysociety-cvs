#!/usr/bin/perl -w
#
# handlemail:
# Handle an individual incoming mail message.
#
# This script is used to process bounces and optouts. It's
# based on the bounce-processing code in FYR.
#
# Copyright (c) 2007 UK Citizens Online Democracy. All rights reserved.
# Email: matthew@mysociety.org; WWW: http://www.mysociety.org/
#

my $rcsid = ''; $rcsid .= '$Id: handlemail,v 1.10 2008-04-12 11:01:29 matthew Exp $';

use strict;
require 5.8.0;

# Horrible boilerplate to set up appropriate library paths.
use FindBin;
use lib "$FindBin::Bin/../perllib";
use lib "$FindBin::Bin/../../perllib";

use mySociety::Config;
BEGIN {
    mySociety::Config::set_file("$FindBin::Bin/../conf/general");
}
use mySociety::DBHandle qw(dbh);
use mySociety::HandleMail;
use mySociety::SystemMisc qw(print_log);

# Don't print diagnostics to standard error, as this can result in bounce
# messages being generated (only in response to non-bounce input, obviously).
mySociety::SystemMisc::log_to_stderr(0);

use Petitions; # to force DB config

my %data = mySociety::HandleMail::get_message();

if (!$data{is_bounce_message}) {
    # This is not a bounce message. Assume it's someone opting out
    my $a = mySociety::HandleMail::get_bounce_from($data{message});
    print_log('info', $a->address() . " inserted into optout table");
    dbh()->do('delete from optout where email = ?', {}, $a->address());
    dbh()->do('insert into optout (email) values (?)', {}, $a->address());
    dbh()->commit();
}

# Discard the message, whatever happened
exit(0);
