#!/bin/bash
# petition-creation-graph
# Plot graph of rate of petition creation
#
# Copyright (c) 2007 UK Citizens Online Democracy. All rights reserved.
# Email: francis@mysociety.org. WWW: http://www.mysociety.org/
# 
# $Id: petition-creation-graph,v 1.1 2007-02-28 00:12:47 francis Exp $

GPLOT_OUTPUT="set terminal png font 'Vera.ttf' 9 size 1200,400"
EXTENSION=".png"
#GPLOT_OUTPUT="set terminal fig color big thickness 1"
#EXTENSION=".fig"
#GPLOT_OUTPUT="set terminal svg size 800 250"
#EXTENSION=".svg"

cd `dirname $0`
cd ../../
source shlib/deployfns

read_conf pet/conf/general

SOURCEA=/tmp/pet-creation-rate-graph-data-$RANDOM$RANDOM
SOURCEB=/tmp/pet-creation-rate-graph-data-$RANDOM$RANDOM
SOURCEC=/tmp/pet-creation-rate-graph-data-$RANDOM$RANDOM
SOURCED=/tmp/pet-creation-rate-graph-data-$RANDOM$RANDOM
SOURCEE=/tmp/pet-creation-rate-graph-data-$RANDOM$RANDOM
SOURCEF=/tmp/pet-creation-rate-graph-data-$RANDOM$RANDOM
GPSCRIPT=/tmp/pet-creation-rate-graph-script-$RANDOM$RANDOM

#    where status in ('draft') 

function grab_data {
    echo "select 
        date(creationtime), count(*)
        from petition 
        $1
        group by date(creationtime)
        order by date(creationtime)
        ;" | psql --host $OPTION_PET_DB_HOST --port $OPTION_PET_DB_PORT -A -F " " $OPTION_PET_DB_NAME $OPTION_PET_DB_USER | egrep -v "date|rows" >$2
}

# rather nastily, work out the cumulative heights in reverse, so can plot impulses on top of each other
grab_data "" $SOURCEA
grab_data "where status not in ('unconfirmed', 'failedconfirm', 'sentconfirm')" $SOURCEB
grab_data "where status not in ('unconfirmed', 'failedconfirm', 'sentconfirm', 'draft', 'resubmitted')" $SOURCEC
grab_data "where status not in ('unconfirmed', 'failedconfirm', 'sentconfirm', 'draft', 'resubmitted', 'rejectedonce', 'rejected')" $SOURCED
grab_data "where status not in ('unconfirmed', 'failedconfirm', 'sentconfirm', 'draft', 'resubmitted', 'rejectedonce', 'rejected', 'live')" $SOURCEE
grab_data "where status not in ('unconfirmed', 'failedconfirm', 'sentconfirm', 'draft', 'resubmitted', 'rejectedonce', 'rejected', 'live', 'finished')" $SOURCEF

#        'unconfirmed'
#        'failedconfirm',    -- confirmation email delivery failed
#        'sentconfirm',      -- confirmation email sent

#        'draft'
#        'resubmitted',      -- resubmitted

#        'rejectedonce',     -- rejected once
#        'rejected',         -- rejected finally, or timed out

#        'live'

#        'finished'          -- deadline passed

cat >$GPSCRIPT <<END 
    unset border
    unset arrow
    set key left
    set tics out
    $GPLOT_OUTPUT

    set xdata time
    set timefmt "%Y-%m-%d"
    set xrange ["2006-11-14":]
    set format x "%d %b %Y"
    set xtics nomirror
    set xlabel "status of petitions that were created on each calendar day"

    set ytics nomirror 
    set ylabel "number of petitions created on the calendar day" 
    set y2tics tc lt 2
    set y2label "cumulative total number of petitions" tc lt 2
    set format y2 "%.0f"

#    set arrow 1 from '2005-02-14', 0 to '2005-02-14', 900 lt 0 nohead
#    set label 1 'launch of beta' at '2005-02-17', 900

    n = 0
#         "$SOURCEF" using 1:2 with impulses lt 8 lw 15 title "anything else",
    plot "$SOURCEA" using 1:2 with impulses lt 3 lw 15 title "unconfirmed",\
         "$SOURCEB" using 1:2 with impulses lt 4 lw 15 title "awaiting approval",\
         "$SOURCEC" using 1:2 with impulses lt 5 lw 15 title "rejected",\
         "$SOURCED" using 1:2 with impulses lt 6 lw 15 title "live",\
         "$SOURCEE" using 1:2 with impulses lt 7 lw 15 title "finished",\
    "< awk 'BEGIN { n = 0 } { n += \$2; print \$1, \$2, n; }' $SOURCEA" using 1:3 axes x1y2 with lines lt 2 title "cumulative total number of petitions"
END
#echo "gpscript $GPSCRIPT"

export GDFONTPATH=/usr/share/fonts/truetype/ttf-bitstream-vera
gnuplot < $GPSCRIPT > pet/web-admin/pet-live-creation$EXTENSION


