#!/usr/bin/perl -w -I../../perllib -I../perllib

# Oh god, this is awful. As someone else said quite frequently. :)
# 
# So updating cached_signers at the same time you confirm a
# signature is so slow as to collapse the whole site when it's
# busy, as we discovered today. So let's update cached_signers
# separately on cron. But you can't just do it in one update
# as the signer table somehow gets locked and given the number
# of writes going on there, that's just not allowed.
#
# Even just fetching the ids first and then updating with current
# live values does that sometimes. So let's just fetch some values
# and use them, even if by then they'll be out of date. It's not
# as if it's for anything important.
# 
# This currently takes around 2 minutes for the first query.
# And occasionally deadlocks, sigh.

# Parameters:
# all - as first parameter, does every petition.
# Default behaviour is to do only petitions changed in last 35 minutes.

# Horrible boilerplate to set up appropriate library paths.
use FindBin;
use lib "$FindBin::Bin/../perllib";
use lib "$FindBin::Bin/../../perllib";
chdir $FindBin::Bin;

use strict;
require 5.8.0;
use POSIX qw(strftime);
use mySociety::Util;
use mySociety::Config;
BEGIN {
    mySociety::Config::set_file("$FindBin::Bin/../conf/general");
}
use mySociety::DBHandle qw(dbh);
use Petitions;

# print "Starting to fetch 'correct' totals at " . localtime(). "\n";

# If you calculate the date, postgres will use the signtime index
# If you use current_timestamp, it seq. scans the entire table, genius
my @time = localtime();
$time[1] -= 35;
my $date = strftime("%Y-%m-%d %H:%M:%S", @time);
my $date_part = " and id in (select distinct(petition_id) from signer where signtime > '$date') ";
$date_part = "" if ($ARGV[0] && $ARGV[0] eq "all");
my $r = dbh()->selectcol_arrayref("select id,
    (select count(*)+1 from signer 
        where petition_id=petition.id and emailsent='confirmed' and showname='t')
    from petition
    where cached_signers !=
        (select count(*)+1 from signer
            where petition_id=petition.id and emailsent='confirmed' and showname='t')
        $date_part
    ", { Columns => [1,2] } );
my %hash = @$r;

# print "Starting to update " . (@$r/2) . " cached totals at " . localtime() . "\n";

foreach (keys %hash) {
    # print "Updating $_ to $hash{$_}...\n";
    dbh()->do("update petition set cached_signers=?, lastupdate=ms_current_timestamp() where id=?",
        {}, $hash{$_}, $_);
    dbh()->commit();
}

# print "Finished at " . localtime() . "\n";

