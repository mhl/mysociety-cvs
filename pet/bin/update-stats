#!/usr/bin/perl -w -I../../perllib -I../perllib

# Horrible boilerplate to set up appropriate library paths.
use FindBin;
use lib "$FindBin::Bin/../perllib";
use lib "$FindBin::Bin/../../perllib";
chdir $FindBin::Bin;

use strict;
require 5.8.0;
use mySociety::Config;
BEGIN {
    mySociety::Config::set_file("$FindBin::Bin/../conf/general");
}
use mySociety::DBHandle qw(dbh);
use Petitions;

# Signatures counts
dbh()->do("insert into stats (whencounted, key, value) values (ms_current_timestamp(), 'signatures_pending', 
    (SELECT COUNT(*) FROM signer WHERE showname = 't' AND emailsent = 'pending'))");
dbh()->do("insert into stats (whencounted, key, value) values (ms_current_timestamp(), 'signatures_sent', 
    (SELECT COUNT(*) FROM signer WHERE showname = 't' AND emailsent = 'sent'))");
dbh()->do("insert into stats (whencounted, key, value) values (ms_current_timestamp(), 'signatures_failed', 
    (SELECT COUNT(*) FROM signer WHERE showname = 't' AND emailsent = 'failed'))");
dbh()->do("insert into stats (whencounted, key, value) values (ms_current_timestamp(), 'signatures_confirmed', 
    (SELECT COUNT(*) FROM signer WHERE showname = 't' AND emailsent = 'confirmed'))");
dbh()->do("insert into stats (whencounted, key, value) values (ms_current_timestamp(), 'signatures_confirmed_unique', 
    (SELECT COUNT(DISTINCT email) FROM signer WHERE showname = 't' AND emailsent = 'confirmed'))");
dbh()->commit();

# Petition counts
dbh()->do("insert into stats (whencounted, key, value) values (ms_current_timestamp(), 'petitions_unconfirmed', 
    (SELECT COUNT(*) FROM petition WHERE status = 'unconfirmed'))");
dbh()->do("insert into stats (whencounted, key, value) values (ms_current_timestamp(), 'petitions_failedconfirm', 
    (SELECT COUNT(*) FROM petition WHERE status = 'failedconfirm'))");
dbh()->do("insert into stats (whencounted, key, value) values (ms_current_timestamp(), 'petitions_sentconfirm', 
    (SELECT COUNT(*) FROM petition WHERE status = 'sentconfirm'))");
dbh()->do("insert into stats (whencounted, key, value) values (ms_current_timestamp(), 'petitions_draft', 
    (SELECT COUNT(*) FROM petition WHERE status = 'draft'))");
dbh()->do("insert into stats (whencounted, key, value) values (ms_current_timestamp(), 'petitions_rejectedonce', 
    (SELECT COUNT(*) FROM petition WHERE status = 'rejectedonce'))");
dbh()->do("insert into stats (whencounted, key, value) values (ms_current_timestamp(), 'petitions_resubmitted', 
    (SELECT COUNT(*) FROM petition WHERE status = 'resubmitted'))");
dbh()->do("insert into stats (whencounted, key, value) values (ms_current_timestamp(), 'petitions_rejected', 
    (SELECT COUNT(*) FROM petition WHERE status = 'rejected'))");
dbh()->do("insert into stats (whencounted, key, value) values (ms_current_timestamp(), 'petitions_live', 
    (SELECT COUNT(*) FROM petition WHERE status = 'live'))");
dbh()->do("insert into stats (whencounted, key, value) values (ms_current_timestamp(), 'petitions_finished', 
    (SELECT COUNT(*) FROM petition WHERE status = 'finished'))");
dbh()->commit();

# Petition totals
dbh()->do("insert into stats (whencounted, key, value) values (ms_current_timestamp(), 'petitions_all_unconfirmed', 
    (SELECT COUNT(*) FROM petition WHERE status in ('unconfirmed', 'failedconfirm', 'sentconfirm')))");
dbh()->do("insert into stats (whencounted, key, value) values (ms_current_timestamp(), 'petitions_all_confirmed', 
    (SELECT COUNT(*) FROM petition WHERE status not in ('unconfirmed', 'failedconfirm', 'sentconfirm')))");
dbh()->commit();
 
# Cached petition totals
dbh()->do("delete from stats where key like 'cached\_petitions\_%'");
dbh()->do("insert into stats (whencounted, key, value) select current_timestamp, 'cached_petitions_'||status, count(*) from petition where status in ('live','finished','rejected') group by status");
dbh()->do("insert into stats (whencounted, key, value) select current_timestamp, 'cached_petitions_'||status||'_'||category, count(*) from petition where status in ('live','finished','rejected') group by category,status");
dbh()->commit();

# Most prolific signers
# fun but probably pointless (unless maybe helps with antispamming)
# select count(*) as c, email from signer group by signer.email order by c desc limit 20;

