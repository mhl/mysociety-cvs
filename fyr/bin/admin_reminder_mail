#!/usr/local/bin/php -q
<?php
/* 
 * admin_reminder_mail:
 * Works out administrative tasks which need doing on WriteToThem, and 
 * sends email.  By default just a test, specify --realrun to really
 * send to team@writetothem.com
 *
 * Copyright (c) 2005 UK Citizens Online Democracy. All rights reserved.
 * Email: francis@mysociety.org. WWW: http://www.mysociety.org/
 *
 * $Id: admin_reminder_mail,v 1.8 2005-11-25 21:26:33 dademcron Exp $
 *
 */

require_once "../conf/general";
require_once "../phplib/queue.php";
require_once "../../phplib/dadem.php";
require_once "../../phplib/votingarea.php";
require_once "../../phplib/utility.php";

function error($str) {
    fwrite(STDERR, "admin_reminder_mail: ERROR: $str\n");
}

$short_opts = '';
$long_opts = array('help');
require_once '../../phplib/phpcli.php';

$switches = $options[0];
$args = $options[1];
$realrun = 0;
if (count($args) > 1) {
    print "Specify at most one argument.\n";
    exit;
}
if (count($args) == 1) {
    $realrun = 1;
    $email_to = $args[0];
}
foreach ($switches as $switch) {
    if ($switch[0]=='--help') {
?>

Usage: admin_reminder_mail [TO_ADDRESS]

TO_ADDRESS is the (comma separated) list of email addresses to send to.
If no TO_ADDRESS is specified command runs in test mode, and outputs
to stdout.

--help      Display this help message

<?
        exit;
    }
}

// Prepare email...
$mail = '';

// Messages in "need attention" state
$need_attention_messages = msg_admin_get_queue('needattention', array());
$url = OPTION_ADMIN_URL . '/?page=fyrqueue';
$need_attention_messages_count = count($need_attention_messages);
if ($need_attention_messages_count > 0) {
    $mail .= "
* $need_attention_messages_count messages are frozen, or have bounced.
  Decide if they are valid, so the real ones can get on their way:
  $url
";
}

// Representatives with bad contact details
$bad_contacts = dadem_get_bad_contacts();
dadem_check_error($bad_contacts);
$bad_contacts_info = dadem_get_representatives_info($bad_contacts);
dadem_check_error($bad_contacts_info);
$mps = 0;
$not_mps = 0;
foreach ($bad_contacts_info as $info) {
    if ($info['type'] == 'WMC') {
        $mps++;
    } else {
        $not_mps++;
    }
}

$url = OPTION_ADMIN_URL . '/?page=reps';
if ($mps > 0) {
    $mps_constituents = number_format($mps * 60000);
    $mail .= "
* $mps_constituents people are stopped from contacting their MP.
  Phone up $mps offices and get constituency mail faxes/emails:
  $url
";
}
if ($not_mps > 0) {
    $mail .= "
* $not_mps reps/councils have no contact details
  Find out councillor and other rep contact details:
  $url
";
}

// Councils which are not matched
$councils_not_matched = dadem_admin_get_raw_council_status('needattention');
$url = OPTION_ADMIN_SERVICES_CGI . 'match.cgi';
if ($councils_not_matched > 0) {
    $mail .= "
* $councils_not_matched councils have not matched with GovEval data
  Help them along their way:
  $url
";
}
if ($mail) {
    $mail = "Here are some thing to do to make our service smoother and lovelier...
".$mail;
}

// Find MPs with no responsiveness
$badmps = `./badmps`;
if ($badmps) {
    $mail .= "\n";
    $mail .= $badmps;
}

// Diligency league tables...
// ... for futzing with the queue
$diligency_queue = msg_admin_get_diligency_queue(time() - 60*60*24*7);
if (count($diligency_queue) > 0) {
    $dili_mail .= "* At futzing with the message queue:\n";
    foreach ($diligency_queue as $pair) {
        $dili_mail .= sprintf("%12s %5d", $pair[1], $pair[0]) . "\n";
    }
    $dili_mail .= "\n";
}
// ... for other representatives
$diligency_reps = dadem_admin_get_diligency_reps(time() - 60*60*24*7);
if (count($diligency_reps) > 0) {
    $dili_mail .= "* At getting MP and other contact details:\n";
    foreach ($diligency_reps as $pair) {
        $dili_mail .= sprintf("%12s %5d", $pair[1], $pair[0]) . "\n";
    }
    $dili_mail .= "\n";
}
// ... for councils over last 7 days
$diligency_councils = dadem_admin_get_diligency_council(time() - 60*60*24*7);
if (count($diligency_councils) > 0) {
    $dili_mail .= "* At fixing up councillors and wards:\n";
    foreach ($diligency_councils as $pair) {
        $dili_mail .= sprintf("%12s %5d", $pair[1], $pair[0]) . "\n";
    }
    $dili_mail .= "\n";
}
if ($dili_mail) {
    if ($mail) {
    $mail .= "

And this week's most diligent were (please, take a bow!)...

";  } else {
    $mail .= "This week's most diligent were (please, take a bow!)...

";
    }
    $mail .= $dili_mail;
}

// Send mail to team@
if ($mail) {
        $dest = $email_to;
        $subject ="WriteToThem needs some tender loving care";
        $mail .="
That's all for this week!

-- The Quality Deity";
    if ($realrun) {
        mail($dest, $subject, $mail,
            "From: The Quality Deity <team@writetothem.com>\n".
            "X-Mailer: PHP/" . phpversion());
    } else {
        print "Subject: $subject\n\n";
        print $mail;
    }
}

