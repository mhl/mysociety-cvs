#!/usr/bin/perl -w
#
# find-long-logs:
#
# Copyright (c) 2006 UK Citizens Online Democracy. All rights reserved.
# Email: francis@mysociety.org; WWW: http://www.mysociety.org/
#

my $rcsid = ''; $rcsid .= '$Id: find-long-logs,v 1.7 2008-08-10 11:06:10 matthew Exp $';

use strict;
require 5.8.0;

# Number of lines which log must be longer than to flag
my $low = 10000;

# Horrible boilerplate to set up appropriate library paths.
use FindBin;
use lib "$FindBin::Bin/../perllib";
use lib "$FindBin::Bin/../../perllib";

use Data::Dumper;
use POSIX qw(strftime);

use mySociety::Config;
BEGIN {
    mySociety::Config::set_file("$FindBin::Bin/../conf/general");
}
use mySociety::DBHandle qw(dbh);
use FYR;

my $long_msgs = dbh()->selectall_arrayref("select count(*) as c, message_id 
                from message_log 
                group by message_id 
                having count(*) >= ?
                order by c desc", 
                {}, $low);

my $count = 0;
foreach my $arr (@$long_msgs) {
    my ($c, $id) = @$arr;
    # Messages which represent old bugs now fixed.
    next if $id eq "7d310c8b4da1c545129d"; # was bug when messages failed delivery with bounce
                                           # repeatedly, swapping between ready and bounce_wait state
                                           # and never timing out. now fixed.
    next if $id eq "8c3c0fb7174973733a08" or $id eq "ff13f9646b7d010c9f2d" or $id eq "0dc6ff5b7530c7ea51e2" or $id eq "805d782d788bb704699f"; # looks like fax server was dead for some reason at this time

    my $info = dbh()->selectrow_hashref("select created, state from message where id = ?", {}, $id);
    die "unexpectedly not got info on message $id" if !$info;

    print "$id ";
    print "(created " . strftime("%d %b %Y", localtime($info->{'created'}));
    print ", state " . $info->{'state'};
    print ")";
    print " has $c log messages, 5 in the middle are:\n";
    my $stcon = dbh()->prepare("select whenlogged, message from message_log where message_id = ? order by whenlogged desc limit 5 offset ?");
    $stcon->execute($id, $low / 2);
    while (my ($whenlogged, $message) = $stcon->fetchrow_array()) {
        print "\t$whenlogged $message\n";
    }
    print "\n";
    $count++;
}

if ($count) {
    print <<END

All the above have too many log message. Action for each:

* Have any underlying bug fixed - nothing should be making
10,000 log messages without going into an error state
which stops it.

* When the bug is fixed, either call reduce-repeated-logs
manually to remove repeated lines (if they are one or two lines
repeating). Or add the message number to find-long-logs explicitly
so it doesn't report it again, with a comment about what bug
it represented.
END
}


