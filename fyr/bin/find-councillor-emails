#!/usr/bin/php
<?php
/* 
 * find-councillor-emails
 * For councils that have a list of councillors, but email addresses are
 * only on individual councillor pages. Generates JS that can be used in
 * council admin interface directly.
 *
 * Copyright (c) 2006 UK Citizens Online Democracy. All rights reserved.
 * Email: matthew@mysociety.org. WWW: http://www.mysociety.org/
 *
 * $Id: find-councillor-emails,v 1.4 2006-11-13 15:45:58 matthew Exp $
 *
 */

# Edinburgh configuration

# List of councillors
$url = 'http://www.fife.gov.uk/orgs/index.cfm?fuseaction=councillor.all&orgid=60304273-A856-11D6-BF4D0002A5349AC9&contentid=5028';

# Regular expression that matches link to individual councillor page
$matchlink = '<area href="(.*?)"';

# Are links matched by the above HTML entity encoded?
$link_html_encoded = true;

# If the links are relative, supply the prefix here
$matchprefix = 'http://www.sheffield.gov.uk';

# Regular expression that matches email address on individual councillor page
$emaillink = '"mailto:(.*?@sheffield\.gov\.uk)"';

# Array of email addresses to ignore
$emailnot = array('justask', 'webmaster', 'Webmaster');
foreach ($emailnot as $i => $email) {
    $emailnot[$i] .= '@edinburgh.gov.uk';
}

# Actual code
$f = file_get_contents($url);
preg_match_all('#' . $matchlink . '#i', $f, $m);
print "javascript:(function(){var c=0;";
print "var e=['',";
$donefirst = 0;
foreach ($m[1] as $link) {
    if ($link_html_encoded)
        $link = html_entity_decode($link);
    $f = file_get_contents($matchprefix . $link);
    preg_match_all('#' . $emaillink . '#', $f, $mm);
    foreach ($mm[1] as $email) {
        if (!in_array($email, $emailnot)) {
            if ($donefirst) print ',';
            print "'$email'";
            $donefirst = true;
        }
    }
}

print "];is=document.getElementsByTagName('input');for(j=0;j<is.length;j++){i=is[j];if(i.name.substring(0,9)=='rep_email'){i.value=e[c++];}}})()";

