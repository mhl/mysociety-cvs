#!/usr/local/bin/php -q
<?php

/* daily:
 * To be run daily, just after midnight, to send out failure messages
 * (And probably things like "wow, look how many you over-subscribed" messages)
 *
 * Copyright (c) 2005 UK Citizens Online Democracy. All rights reserved.
 * Email: matthew@mysociety.org. WWW: http://www.mysociety.org/
 *
 * $Id: frequentupdate,v 1.4 2005-04-04 00:55:03 francis Exp $
 *
 */

require_once "../phplib/pledge.php";

$short_opts = '';
$long_opts = array('verbose','testrun','help');
require_once 'phpcgi';

$switches = $options[0];
$args = $options[1];
$verbose = 0; 
$testrun = 0;
foreach ($switches as $switch) {
    if ($switch[0]=='--verbose') $verbose = 1;
    if ($switch[0]=='--testrun') $testrun = 1;
    if ($switch[0]=='--help') {
?>

PledgeBank daily script, run just after midnight
./daily [--testrun] [--verbose]

--verbose    Display more information
--testrun    Dry run, just show what would do

<?
        exit;
    }
}

require_once "../conf/general";
include_once '../phplib/db.php';
include_once '../phplib/fns.php';
include_once '../../phplib/utility.php';

db_connect();

check_for_completed_pledges();
check_for_expired_pledges();

function check_for_completed_pledges() {
    global $verbose, $testrun;

    $q = db_query("SELECT *, 
        (SELECT COUNT(*) FROM signers WHERE pledge_id = pledges.id) as signatures
        FROM pledges WHERE confirmed AND NOT completionnotified FOR UPDATE");
    while ($r = db_fetch_array($q)) {
        if ($r['signatures'] >= $r['target']) {
            # Success
            if ($testrun)
                print "Would send success messages for pledge $r[id] ($r[title])\n";
            elseif (!send_success_email($r))
                print "Failure sending success messages, pledge $r[id] ($r[title])\n";
            else {
                db_query('UPDATE pledges SET completionnotified = true, success = true WHERE id = ?', $r['id']);
                if ($verbose)
                    print "Success messages sent for pledge $r[id] ($r[title])\n";
            }
        }
    }
    db_commit();
}

function check_for_expired_pledges() {
    global $verbose, $testrun;

    $q = db_query("SELECT * FROM pledges WHERE confirmed AND date < pb_current_date() AND NOT completionnotified FOR UPDATE");
    while ($r = db_fetch_array($q)) {
        # Failure
        if ($testrun)
            print "Would send failure messages for pledge $r[id] ($r[title])\n";
        elseif (!send_failure_email($r))
            print "Failure sending failure messages of pledge $r[id] ($r[title])\n";
        else {
            db_query('UPDATE pledges SET completionnotified = true WHERE id = ?', $r['id']);
            if ($verbose)
                print "Failure messages sent for pledge $r[id] ($r[title])\n";
        }
    }
    db_commit();
}

# ------------------------------------------

function send_failure_email($pledge) {
    $globalsuccess = 1;

    $pledge_id = $pledge['id'];
    $q = db_query('SELECT name, email FROM signers WHERE pledge_id=?', array($pledge_id));
    $pledge['actual'] = db_num_rows($q);
    $success = pb_send_email_template($pledge['email'], 'failed-creator', $pledge);
    if ($success==0) 
        $globalsuccess = 0;

    while ($r = db_fetch_array($q)) {
        $success = pb_send_email_template($r['email'], 'failed-signer', 
            array_merge($pledge, array('signer_name'=>$r['name'])));
        if ($success==0) 
            $globalsuccess = 0;
    }
    return $globalsuccess;
}

function send_success_email($pledge) {
    $q = db_query('SELECT * FROM signers WHERE pledge_id=?', array($pledge['id']));
    $pledge['actual'] = db_num_rows($q);
    $pledge['exceeded_or_met'] = ($pledge['actual']>$pledge['target']?'exceeded':'met');

    $globalsuccess = 1;
    $title = $pledge['title'];

    $data = array('pledge_id' => $pledge['id'], 'circumstance' => 'success');
    $token = pledge_token_store('announce-post', $data);
    $url = OPTION_BASE_URL . "/M/" . $token;
    $success = pb_send_email_template($pledge['email'], 'succeeded-creator', 
            array_merge($pledge, array('url'=>$url)));
    if ($success==0) 
        $globalsuccess = 0;

    $s = db_fetch_array($q);
    while ($s) {
        $success = pb_send_email_template($s['email'], 'succeeded-signer',
            array_merge($pledge, array('signer_name'=>$r['name'])));
        if ($success==0) 
            $globalsuccess = 0;
        $s = db_fetch_array($q);
    }
    return $globalsuccess;
}


