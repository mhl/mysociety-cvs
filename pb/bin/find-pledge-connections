#!/usr/bin/perl -w
#
# find-pledge-connections:
# Compute connections between pledges on a "people who signed ... also
# signed..." basis. Designed to be run from cron.
#
# This is kind-of nasty. It would be cheaper but harder to update this
# on-the-fly as pledges are signed.
#
# Copyright (c) 2005 UK Citizens Online Democracy. All rights reserved.
# Email: chris@mysociety.org; WWW: http://www.mysociety.org/
#

my $rcsid = ''; $rcsid .= '$Id: find-pledge-connections,v 1.16 2005-07-06 16:50:08 matthew Exp $';

use strict;
require 5.8.0;

# Horrible boilerplate to set up appropriate library paths.
use FindBin;
use lib "$FindBin::Bin/../perllib";
use lib "$FindBin::Bin/../../perllib";

use mySociety::Config;
BEGIN {
    mySociety::Config::set_file("$FindBin::Bin/../conf/general");
}
use mySociety::DBHandle qw(dbh);

use PB;

sub do_connections ($) {
    my $np = shift;
    foreach my $p (values %$np) {
        next unless (@$p > 1);
        my @pledges = sort { $a <=> $b } @$p;
        for (my $i = 0; $i < @pledges - 1; ++$i) {
            for (my $j = $i + 1; $j < @pledges; ++$j) {
                if (1 != dbh()->do('update pledge_connection set strength = strength + 1 where a_pledge_id = ? and b_pledge_id = ?', {}, $pledges[$i], $pledges[$j])) {
                    dbh()->do('insert into pledge_connection (a_pledge_id, b_pledge_id, strength) values (?, ?, 1)', {}, $pledges[$i], $pledges[$j]);
                }
            }
        }
    }
}

dbh()->do('delete from pledge_connection');

my $s = dbh()->prepare("
                select pledge_id, signers.person_id, signers.name
                from signers, pledges
                where pledges.id = pledge_id
                    and signers.person_id is not null
                    and pledges.pin is null
                    and signers.showname
                    and pb_pledge_prominence(pledge_id) <> 'backpage'
                    and whensucceeded is null
                    and date >= pb_current_date()
                order by signers.person_id");
$s->execute();

my $last_person_id;
my %name_pledge;
while (my ($pledge_id, $person_id, $name) = $s->fetchrow_array()) {
    if (defined($last_person_id) && $person_id != $last_person_id) {
        do_connections(\%name_pledge);
        %name_pledge = ( );
    }
    $last_person_id = $person_id;
    $name = lc($name);
    $name =~ s/[^a-z-]//g;
    push(@{$name_pledge{$name}}, $pledge_id);
}

do_connections(\%name_pledge);

$s = dbh()->prepare("
                select id, person_id, name
                from pledges
                where pin is null
                    and pb_pledge_prominence(id) <> 'backpage'
                    and whensucceeded is null
                    and date >= pb_current_date()
                order by person_id");
$s->execute();
$last_person_id = undef;
%name_pledge = ( );
while (my ($pledge_id, $person_id, $name) = $s->fetchrow_array()) {
    if (defined($last_person_id) && $person_id != $last_person_id) {
        do_connections(\%name_pledge);
        %name_pledge = ( );
    }
    $last_person_id = $person_id;
    $name = lc($name);
    $name =~ s/[^a-z-]//g;
    push(@{$name_pledge{$name}}, $pledge_id);
}

do_connections(\%name_pledge);

dbh()->commit();
