
0. Create index files command
1. Load vehicle type in, properly distinguish flights
2. Make loading script load station names and journey info
3. Change route dumping to store in succinct way
4. Make route dumping go through to output
5. Clear tile cache script

Contours of life TODO
=====================

Remove flights other than internal Scotland ones

Properly do walking time at end point
    - maybe use station number 0 for that

Show that it is only up to 9am, perhaps by marking time on sliders.

Permalinks - put the current map pan/zoom and slider values in # URL

Code to take email if isodaemon or tile server load to high

CloudMade tiles onto CDN or similar

Choose different times of day

Check data quality
- Option to see routes easily

Update Flash UI with Stamen updates

Try optimisations
    - try Flash renderer
    - refresh rate with AJAX?
    - do obvious planner improvements
    - tileserver precache station coordinates 
    - tileserver rewrite in C

Work more on culling algorithm


Timetable planner questions
----------------------------

Find out why Ardvasar doesn't have any buses arriving at it

Cope with some places having silly long coordinates:
ATCO_NATIONAL_BUS.CIF:QBN13001528    4166200055150600ANNFIELD PLAIN          Annfield Plain          
ATCO_NATIONAL_BUS.CIF:QBN13001517    4166200054746400LANCHESTER              Lanchester  

Worry about the places we've stripped because they don't have a location
field in ATCO-CIF. Should we be loading their coordinates from NaPTAN?
Francis has file nptdr-missing-grid-2008.txt of the places

Interchange times
- find proper ones to use for TRAIN and BUS
- possibly load QV records if needed to discriminate times
- need another longer time for QVNAIR/12? (should we be including air at all?)
- measures according to type of journey before, not pair of before/after

Optimisation ideas
------------------

Use binary search to find latest time in a journey before a time
Sort the journeys at a location by time and binary slice them 

Instead of returning all the direct connections, instead keep the connecting
journeys in a sorted list, and find just the nearest one with a binary
search. Then let the relaxed_heap do the work, rather than inserting
into the adjacents structure.


Thomas CIF file
---------------
Check that all the ids and train operation numbers and stuff in journey parts are ok - I think that they are MPS
Add direct services to Tidmouth
Add some services run by Daisy on Thomas's line
Reduced Sunday service


Larger ideas
============

Something to embed a map on your own site

Make modest maps cope better with bad network connections

Do all rendering of circles in flash, and stream the data to it.

Make sure is automatically updated with mid-year new batches of data

Currently we have:
    "how long does it take to get from everywhere, to arrive by 9am at target"
Could have:
    "how long does it take to get to everywhere, leaving target at 5pm"
And then fancier (or at least, fancier seeming, not mathematically so)
    "how long does it take to get from target, to arrive anywhere by 9am"
    "how long does it take to get to target, leaving anywhere at 5pm"

Flakiness metric 
- e.g. some measure of mean and variance of waiting time to go home between
  5pm/6pm, giving you a measure of chance of you getting home
  if you leave work at a random time in that interval. 
- Plot distribution of getting home time for leaving in a range?

Journeys changing at school holiday can really matter - get
data for this (not in NPTDR) and offer flakiness across time metric.

Handle journeys after midnight - currently it just cuts them short at midnight.
   Instead probably needs to make two copies of them one for each day. Indeed,
   to do all this really well, need to make a copy of every journey for yesterday.


