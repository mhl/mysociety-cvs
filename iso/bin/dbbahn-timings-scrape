#!/usr/bin/perl -w
#
# dbbahn-timings-scrape:
#
# Screenscrapes Deutsche Bahn to get timings from London to railway stations in Europe
#
# Copyright (c) 2008 UK Citizens Online Democracy. All rights reserved.
# Email: matthew@mysociety.org; WWW: http://www.mysociety.org/
#

my $rcsid = ''; $rcsid .= '$Id: dbbahn-timings-scrape,v 1.1 2008-04-24 13:27:57 matthew Exp $';

use strict;
require 5.8.0;

use WWW::Mechanize;
use HTML::Entities;

open FP, 'StationsList' or die;
my @list = <FP>;
close FP;

my $start_time = time();
my $lookups = 0;
foreach (@list) {
    my $name = $_;
    chomp $name;
    decode_entities($name);

    get_timings($name);
    $lookups++;

    my $time_so_far = time() - $start_time;
    print STDERR "\rSo far: $lookups/" . (scalar @list)
        . ' in ' . $time_so_far . 's, have got to ' . $name;

    sleep 1;
}
print "\n";

sub get_timings {
    my ($to) = @_; # , $line) = @_;

    my @params = (
        queryPageDisplayed => 'yes',
	REQ0JourneyStopsSA => 1,
	REQ0JourneyStopsSG => 'London St Pancras International',
	REQ0JourneyStopsZA => 1,
	REQ0JourneyStopsZG => $to,

	REQ0JourneyDate    => 'Tu, 08.04.08',
	wDayExt0 => 'Mo|Tu|We|Th|Fr|Sa|Su',
	REQ0JourneyTime    => '07:00',
	REQ0HafasSearchForw => 1,
	REQ1JourneyDate    => '',
	wDayExt1 => 'Mo|Tu|We|Th|Fr|Sa|Su',
	REQ1JourneyTime    => '',
	REQ1HafasSearchForw => 1,

	REQ0JourneyProduct_prod_list => '1:1111111111000000',
	existOptimizePrice => 1,
	REQ0HafasOptimize1 => '0:1',
	existOptionBits => 'yes',
	REQ0HafasChangeTime => '0:1',

	'REQ0Tariff_TravellerType.1' => 'E',
	'REQ0Tariff_TravellerAge.1' => 30,
	'REQ0Tariff_TravellerReductionClass.1' => '0',
	'REQ0Tariff_Class' => '2',

	start => 'Search connection',
    );

    my $url = 'http://reiseauskunft.bahn.de/bin/query.exe/en?ld=212.139&rt=1&OK';
    my $m = new WWW::Mechanize();
    $m->agent_alias('Windows IE 6');
    $m->post($url, \@params);

    my $html = $m->content();

    if ($html =~ /several possible stops/) {
        if ($html =~ /<option value="(.*?)">\Q$to\E<\/option>/) {
	    $m->submit_form(
	        form_name => 'formular',
	        fields => { 'REQ0JourneyStopsZK' => $1 },
	        button => 'start'
	    );
	    $html = $m->content();
	}
    }

    #if ($html =~ m{London[ ]St\.[ ]Pancras[ ]International\s*</a>.*?<td.*?<td.*?<td.*?<td[^>]*>\s*(.+?)\s+}xs) {
    (my $fileout = $to) =~ s{/}{_SLASH_}g;
    if ($html =~ /Details for all/) {
        #my $first_duration = $1;
	$m->click('jumpToDetails=yes&guiVCtrl_connection_detailsOut_add_group_overviewOut');
	$html = $m->content();
	$html =~ s/^.*?Detailed view//s;
	$html =~ s/Print view.*//s;
	my $a = substr($to, 0, 1);
	my $b = substr($to, 1, 1);
	mkdir ("/data/deutsche-bahn/$a");
	mkdir ("/data/deutsche-bahn/$a/$b");
	open FP, ">/data/deutsche-bahn/$a/$b/$fileout" or die "$! : $a $b $to : ";
	print FP $html;
	close FP;
        #print "$line|$first_duration\n";
    } elsif ($html =~ /several possible stops/) {
        $html =~ s/^.*?From://s;
	$html =~ s/several possible stops.*//s;
	open FP, ">/data/deutsche-bahn/multiple/$fileout" or die $!;
	print FP $html;
	close FP;
        #print "$line|SEVERAL\n";
    } elsif ($html =~ /no route found/) {
	open FP, ">/data/deutsche-bahn/no-route/$fileout" or die $!;
	print FP $html;
	close FP;
        #print "$line|NOROUTE\n";
    } else {
	mkdir ("/data/deutsche-bahn/multiple");
	open FP, ">/data/deutsche-bahn/problem/$fileout" or die $!;
	print FP $html;
	close FP;
        #print "$line|PROBLEM\n";
    }
    $m = undef;
}

