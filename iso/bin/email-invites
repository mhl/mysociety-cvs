#!/usr/bin/python
#
# email-invites:
# Send out invites
#
# Copyright (c) 2009 UK Citizens Online Democracy. All rights reserved.
# Email: matthew@mysociety.org; WWW: http://www.mysociety.org/
#
# $Id: email-invites,v 1.10 2009-06-04 16:10:35 francis Exp $
#

import sys
sys.path.extend((sys.path[0]+"/../pylib", sys.path[0]+"/../../pylib"))
import os
import re
import optparse

import mysociety.config
mysociety.config.set_file(sys.path[0]+"/../conf/general")

from page import random_token, send_template_email

import coldb
db = coldb.get_cursor()

parser = optparse.OptionParser()
parser.set_usage('''
./email-invites [OPTIONS]

Sends out various sorts of email invites to people in the database who are waiting for them.
''')
parser.add_option('--friend', action='store_true', dest="friend", help='Send invites of friends type', default=False)
parser.add_option('--signup', action='store_true', dest="signup", help='Send invites of signups type', default=False)
parser.add_option('--limit', type='int', dest="limit", help='Limit to number of invites to send per type', default=None)
parser.add_option('--email', type='string', dest="email", help='Restrict to only sending invites to this email', default=None)
parser.add_option('--debug', action='store_true', dest="debug", help='Print some debugging.', default=False)
(options, args) = parser.parse_args()

if not options.friend and not options.signup:
    print "Please specify at least --friend or --signup"
    sys.exit(1)

def main():
    if options.friend:
        send_invites('SELECT invite.*, inviter.email as inviter_email FROM invite, invite as inviter WHERE invite.source_id = inviter.id AND invite.token IS NULL')
    if options.signup:
        send_invites('SELECT * FROM invite WHERE token IS NULL AND invite.source_id IS NULL')

def send_invites(query):
    if options.email:
        query = query + " AND email = '%s'" % (options.email)
    if options.limit:
        query = query + ' LIMIT %s' % (options.limit)

    if options.debug:
        print "Query:", query

    db.execute(query)
    invites = db.fetchall()

    for row in invites:
        if 'inviter_email' in row:
            template = 'email-invite.txt'
            inviter_email = row['inviter_email']
        else:
            template = 'email-signup.txt'
            inviter_email = None

        if options.debug:
            print "Sending invite to", row['email'], "from", inviter_email, "using template", template,

        token = random_token()
        db.execute('UPDATE invite SET token=%s where id=%s', (token, row['id']))
        db.execute('COMMIT')
        url = mysociety.config.get('BASE_URL') + 'T/' + token
        send_template_email(row['email'], template, {
            'url': url,
            'pid': os.getpid(),
            'inviter_email': inviter_email,
        })
        if options.debug:
            print "done"

main()
